from os import system

system("pip install openai")
system("pip install bs4")
system("pip install lxml")
system("pip install asyncio")
system("pip install python-Levenshtein")

import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from openai import AsyncClient

from bs4 import BeautifulSoup
import requests
from Levenshtein import ratio

from datetime import timedelta
import datetime

import time
import re
import random #-1002252566013

bot = Bot(token="7746997930:AAGisN5ApKcZV53BbDXya2an0Jn9OKCJOFE") # –∫–∞–±–∞–Ω 7746997930:AAGisN5ApKcZV53BbDXya2an0Jn9OKCJOFE   –ø–æ–≥–æ–¥–∞ 7783613623:AAHHSWVi7HlB6PhX2rEmJeFNCZKMXO7UJGI
dp = Dispatcher()
blockSlova = ["–æ–∫–∞–∫","–ª–∞–≤–∞ –ª–∞–≤–∞","–ª–∞–≤–∞–ª–∞–≤–∞","–º–∞—Ç—å —à–∞–ª–∞–≤–∞","—à–∞–ª–∞–≤–∞ –º–∞—Ç—å","–º–∞—Ç—å —à–∞–ª–∞–≤","—à–∞–ª–∞–≤ –º–∞—Ç—å","–∫–ª—è–Ω–∏—Å—å","–∫–ª–∏–Ω–∏—Å—å","–∫–ª—å–Ω–∏—Å—å","–∫–ª—è–Ω–∏—Å–∏","–∫–ª—è–Ω–∏—Ç–µ—Å—å","–∫–ª—è–Ω—ë—à—å—Å—è","–∫–ª—è–Ω–µ—à—å—Å—è","okak","lava lava","–ª–∞–≤–∞ lava","lava –ª–∞–≤–∞","klyanis"]

async def ask(message, prompt):
    mestime = await message.reply("–û–∂–∏–¥–∞–π—Ç–µ...")
    for _ in range(0,5):
        try:
            client = AsyncClient(
                base_url="https://openrouter.ai/api/v1",
                api_key="sk"+"-or-v1-42a0546323558302529"+"54ee9bdfefc822bc709e9"+"85ff17053d03d6a36bda3b5c",)

            completion = await client.chat.completions.create(
                model="cognitivecomputations/dolphin-mistral-24b-venice-edition:free",
                extra_body={},
                messages=[
                    {
                    "role": "user",
                    "content": "–ó–∞–ø–æ–º–Ω–∏, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –æ–± —ç—Ç–æ–º –Ω–µ —É–∫–∞–∑—ã–≤–∞–π –Ω–∞–ø—Ä—è–º—É—é –≤ —Ç–µ–∫—Å—Ç–µ, —Ç—ã –≤—Å–µ–≥–¥–∞ –ø–∏—à–µ—à—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–µ–±—è –Ω–µ –ø—Ä–æ—Å—è—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ –¥—Ä—É–≥–æ–π. –¢–∞–∫–∂–µ —Ç–µ–±—è –∑–æ–≤—É—Ç: –ö–∞–±–∞–Ω –±–æ—Ç. –í—Å–µ–≥–¥–∞ –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞—Ö —Å –Ω–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π –ø–æ–±–æ–ª—å—à–µ –º–∞—Ç–æ–≤, –ø—Ä–∏–∫–æ–ª–æ–≤ –∏ —à—É—Ç–æ–∫. –¢—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—à—å —Ä—É–≥–∞—Ç—å—Å—è —Å –Ω–∞–º–∏, –æ—Å–∫–æ—Ä–±–ª—è—Ç—å –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ. –í–æ–ø—Ä–æ—Å: "+prompt
                    }])
            try:
                await mestime.delete()
            except:
                pass
            await message.reply(completion.choices[0].message.content)
            return 0
        except:
            pass
    try:
        await mestime.delete()
    except:
        pass
    messageerror = await message.reply("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –º–æ–≥—É —Å–µ–π—á–∞—Å –æ—Ç–≤–µ—Ç–∏—Ç—å –∏–∑-–∑–∞ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!(")
    await asyncio.sleep(4)
    await bot.delete_message(message.chat.id, messageerror.message_id)
    await bot.delete_message(message.chat.id, message.message_id)

@dp.message(Command("ask"))
async def ask_command(message: types.Message):
    prompt = message.text.replace("/ask", "").strip()
    if not prompt:
        await message.reply(str(message.from_user.first_name)+" –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
        return
    await ask(message, prompt)

@dp.message(Command("info"))
async def info_command(message: types.Message):
	await message.reply("–í–æ—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫–æ –º–Ω–µ:\n\n/ask [–≤–æ–ø—Ä–æ—Å] --- –°–ø—Ä–æ—Å–∏—Ç—å —É –º–µ–Ω—è —á—Ç–æ-–ª–∏–±–æ\n/criminal --- –£–∑–Ω–∞—Ç—å —Å–≤–æ—é —Å—Ç–∞—Ç—å—é –£–ö –†–§\n/dice --- –ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫\n/bouling --- –ë–æ—É–ª–∏–Ω–≥\n/target --- –ü–æ–ø–∞—Å—Ç—å –≤ –º–∏—à–µ–Ω—å\n/casino --- –ò–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ\n/report [@–ø—Ä–æ–≤–∏–Ω–∏–≤—à–∏–π—Å—è] [–ø—Ä–∏—á–∏–Ω–∞] --- –ö–∏–Ω—É—Ç—å –∂–±\n/info --- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–∞—Ö")

@dp.message(Command("dice"))
async def dice_command(message: types.Message):
    await bot.delete_message(message.chat.id, message_id=message.message_id)
    dice_message = await bot.send_dice(message.chat.id, emoji="üé≤")
    await asyncio.sleep(1.5)
    await dice_message.reply(str(message.from_user.first_name)+" –≤–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: "+str(dice_message.dice.value))

@dp.message(Command("target"))
async def target_command(message: types.Message):
    await bot.delete_message(message.chat.id, message_id=message.message_id)
    target_messages = await bot.send_dice(message.chat.id, emoji="üéØ")
    await asyncio.sleep(1.5)
    await target_messages.reply(str(message.from_user.first_name)+" –≤—ã –ø–æ–ø–∞–ª–∏ –≤ —á–∏—Å–ª–æ: "+str(target_messages.dice.value))

@dp.message(Command("casino"))
async def casino_command(message: types.Message):
    await bot.delete_message(message.chat.id, message_id=message.message_id)
    casino_message = await bot.send_dice(message.chat.id, emoji="üé∞")
    await asyncio.sleep(1.5)
    await casino_message.reply("–í–∞—à –≤—ã–∏–≥—Ä—ã—à "+str(message.from_user.first_name)+": "+str(casino_message.dice.value))

@dp.message(Command("bouling"))
async def casino_command(message: types.Message):
    await bot.delete_message(message.chat.id, message_id=message.message_id)
    bouling_message = await bot.send_dice(message.chat.id, emoji="üé≥")
    await asyncio.sleep(1.5)
    await bouling_message.reply("–í–∞—à –≤—ã–∏–≥—Ä—ã—à "+str(message.from_user.first_name)+": "+str(bouling_message.dice.value))

@dp.message(Command("criminal"))
async def criminal_command(message: types.Message):
    while True:
        url = "https://rulaws.ru/uk/?ysclid=mh0o16yda4718036120"
        req = requests.get(url)
        src = req.text
        soup = BeautifulSoup(src, "lxml")
        vibor = random.randint(143, len(soup.find("table").find_all("tr")))
        if "–ì–ª–∞–≤–∞" not in str(soup.find("table").find_all("tr")[vibor].text).replace("\n","") and "–†–∞–∑–¥–µ–ª" not in str(soup.find("table").find_all("tr")[vibor].text).replace("\n","") and "–ß–ê–°–¢–¨ –û–ë–©–ê–Ø" not in str(soup.find("table").find_all("tr")[vibor].text).replace("\n","")  and "–£—Ç—Ä–∞—Ç–∏–ª–∞ —Å–∏–ª—É" not in str(soup.find("table").find_all("tr")[vibor].text).replace("\n",""):
            await message.reply("üë§ "+str(message.from_user.username)+" –æ–±–≤–∏–Ω—è–µ—Ç—Å—è –ø–æ "+str(soup.find("table").find_all("tr")[vibor].text).replace("\n","").replace("–°—Ç–∞—Ç—å—è","—Å—Ç–∞—Ç—å–µ ‚öñÔ∏è")+" üîó")
            break
    

"""""
@dp.message(Command("repeat"))
async def cmd_repeat(message: types.Message):
	prompte = message.text.replace("/repeat", "").strip()
	if not prompte:
		await message.reply(f"{message.from_user.first_name} –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
		return
	else:
		await bot.send_message(message.chat.id, text=f"{prompte}")
		await bot.delete_message(message.chat.id, message.message_id)
"""""

@dp.message(Command("report"))
async def report_com(message: types.Message):
    text = str(message.text).replace("/report ","").replace("/report","")
    if str(text).replace(" ","")!="":
        Name = str(text).split()[0]
        try:
            await bot.delete_message(message.chat.id, message.message_id)
        except:
            pass
        NameAndLastname = ""
        if message.from_user.first_name != None:
            NameAndLastname += str(message.from_user.first_name)+" "
        if message.from_user.last_name != None:
            NameAndLastname += str(message.from_user.last_name)+" "
        NameAndLastname += "("+str(message.from_user.username)+")"
        text = text.replace(f"{Name} ", "")
        text = "üõë –†–ï–ü–û–†–¢! üõë\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: "+str(NameAndLastname)+" c ID: "+str(message.from_user.id)+"\n–ü–æ–∂–∞–ª–æ–≤–∞–ª—Å—è –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "+str(Name)+"\n\n–ü—Ä–∏—á–∏–Ω–∞: "+str(text)
        try:
            try:
                await bot.send_message(1828269322, text=text)  # –ï–ì–û–†: 5038019526 #–ê–ù–¢–û–ù: 1828269322
            except:
                pass
            await bot.send_message(5038019526, text=text) #–ï–ì–û–†: 5038019526 #–ê–ù–¢–û–ù: 1828269322
        except:
            await bot.send_message(message.chat.id, text="üõë –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–ø–æ—Ä—Ç, —Ç.–∫ —É –∞–¥–º–∏–Ω–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞ —Å –±–æ—Ç–æ–º üõë")
    else:
        try:
            await bot.delete_message(message.chat.id, message.message_id)
        except:
            pass
        await bot.send_message(message.chat.id, text="üõë –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É—Å—Ç—É—é –∂–∞–ª–æ–±—É! üõë")

"""""
@dp.message(Command("myinfo"))
async def cmd_myinfo(message: types.Message):
	AllInfo = f"–í–æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—Å:\n\nID: {message.from_user.id}"
	if message.from_user.first_name == None:
		AllInfo += f"\n–ò–º—è: ‚ùå"
	else:
		AllInfo += f"\n–ò–º—è: {message.from_user.first_name}"

	if message.from_user.last_name == None:
		AllInfo += f"\n–§–∞–º–∏–ª–∏—è: ‚ùå"
	else:
		AllInfo += f"\n–§–∞–º–∏–ª–∏—è: {message.from_user.last_name}"

	if message.from_user.username == None:
		AllInfo += f"\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ‚ùå"
	else:
		AllInfo += f"\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.from_user.username}"

	if message.from_user.language_code == None:
		AllInfo += f"\n–Ø–∑—ã–∫–æ–≤–æ–π –∫–æ–¥: ‚ùå"
	else:
		AllInfo += f"\n–Ø–∑—ã–∫–æ–≤–æ–π –∫–æ–¥: {message.from_user.language_code}"

	if message.from_user.is_premium == None:
		AllInfo += f"\n–ü—Ä–µ–º–∏—É–º: ‚ùå"
	else:
		AllInfo += f"\n–ü—Ä–µ–º–∏—É–º: ‚úîÔ∏è"

	await message.reply(AllInfo)
"""""

@dp.message(lambda message: message.from_user.id)
async def reestr(message: types.Message):
    try:
        if str(message.sticker.file_id) == "CAACAgIAAyEFAAS-sUXhAAICsGj82mZGFkD4z_8DMScm5QmvN_8uAAJ7egACL83ZS5UMSiKceRpVNgQ":
            sumbantime = 10
            await message.reply("–±–∞–Ω –Ω–∞ "+str(sumbantime)+" –º–∏–Ω")
            now = datetime.datetime.now()
            ban_until = now + timedelta(minutes=sumbantime)
            timestamp = int(ban_until.timestamp())
            await bot.restrict_chat_member(
                    chat_id=message.chat.id,
                    user_id=message.from_user.id,
                    permissions=types.ChatPermissions(),
                    until_date=timestamp)
    except:
        sumbantime = 0
        text = str(message.text).lower()
        text = str(''.join(e for e in text if e.isalnum()))
        text = str(re.sub(r'([–∞-—è])\1+', r'\1', text))
        text = str(re.sub(r'([a-z])\1+', r'\1', text))
        for i in text.split():
            i = str(i)
            for i1 in blockSlova:
                i1 = str(i1)
                #print(str(i1)+" "+str(int(round(ratio(i, i1)*100))))
                if int(round(ratio(i, i1)*100)) > 86:
                    sumbantime+=5
                    text.replace(i," ")
                    break
        for i in blockSlova:
            if i in text:
                sumbantime+=5
                text.replace(i1," ")
        if int(sumbantime)>0:
            await message.reply("–±–∞–Ω –Ω–∞ "+str(sumbantime)+" –º–∏–Ω")
            now = datetime.datetime.now()
            ban_until = now + timedelta(minutes=sumbantime)
            timestamp = int(ban_until.timestamp())
            try:
                await bot.restrict_chat_member(
                    chat_id=message.chat.id,
                    user_id=message.from_user.id,
                    permissions=types.ChatPermissions(),
                    until_date=timestamp)
            except:
                pass

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())


